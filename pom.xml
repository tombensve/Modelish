<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
        This is the only way I've found to import a reusable common
        setup for building groovy code.

        There should be an import functionality to make this part
        of the build without treating it as a parent!

        I want the possibility to "import" more than one config like this,
        and publish them as reusable build configurations.

        What I've done here is ugly, but the only thing that works, but only
        for one config!

        I've tried to use:

            <type>pom</type>
            <scope>import</scope>

        but that fails completely!
    -->
    <parent>
        <groupId>com.github.tombensve</groupId>
        <artifactId>groovy-build</artifactId>
        <version>1.0.11</version>
    </parent>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <groupId>se.natusoft</groupId>
    <artifactId>Modelish</artifactId>
    <!-- major.minor.bytecode  -->
    <version>4.3.11</version>

    <packaging>jar</packaging>

    <inceptionYear>~ 2021 ish</inceptionYear>

    <organization>
        <name>Tommy Bengt Svensson</name>
        <url>https://github.com/tombensve/</url>
    </organization>

    <developers>
        <developer>
            <name>Tommy Svensson</name>
            <email>tommy@natusoft.se</email>
        </developer>
    </developers>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/tombensve/Modelish/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>Apache 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <!--
        Configuration
    -->
    <properties>

        <!--
            Version of byte-code to produce.
        -->
        <bytecode.version>11</bytecode.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    </properties>

    <dependencies>

        <!-- Test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <scm>
        <connection>scm:https://github.com/tombensve/Modelish.git</connection>
        <url>scm:https://github.com/tombensve/Modelsih.git</url>
    </scm>

    <distributionManagement>

        <repository>
            <id>repsy</id>
            <name>repsy</name>
            <url>https://repo.repsy.io/mvn/tombensve/natusoft-os</url>
        </repository>

    </distributionManagement>

    <repositories>

        <repository>
            <id>repsy</id>
            <name>My Private Maven Repository on Repsy</name>
            <url>https://repo.repsy.io/mvn/tombensve/natusoft-os</url>
        </repository>

    </repositories>

    <pluginRepositories>

        <pluginRepository>
            <id>repsy</id>
            <name>repsy</name>
            <url>https://repo.repsy.io/mvn/tombensve/natusoft-os</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>

    </pluginRepositories>

    <build>
        <sourceDirectory>src/main/groovy</sourceDirectory>
        <testSourceDirectory>src/test/groovy</testSourceDirectory>

        <extensions>
        </extensions>

        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.8</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

        </plugins>

    </build>

</project>
